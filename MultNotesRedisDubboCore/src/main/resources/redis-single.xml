<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
   <description>redis集群</description>

   <!-- 配置JedisPoolConfig实例 -->
   <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
      <!--最大空闲数-->
      <property name="maxIdle" value="${redis.maxIdle}" />
      <!--连接池的最大数据库连接数  -->
      <property name="maxTotal" value="${redis.maxActive}" />
      <!--最大建立连接等待时间-->
      <property name="maxWaitMillis" value="${redis.maxWait}" />
      <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->
      <property name="testOnBorrow" value="${redis.testOnBorrow}" />
      <!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟)-->
      <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
      <!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3-->
      <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
      <!--逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1-->
      <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
   </bean>

   <!-- Redis集群配置 -->
   <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
      <property name="maxRedirects" value="6"></property>
      <property name="clusterNodes">
         <set>
            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host1}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port1}"></constructor-arg>
            </bean>

            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host2}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port2}"></constructor-arg>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host3}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port3}"></constructor-arg>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host4}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port4}"></constructor-arg>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host5}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port5}"></constructor-arg>
            </bean>
            <bean class="org.springframework.data.redis.connection.RedisNode">
               <constructor-arg name="host" value="${redis.host6}"></constructor-arg>
               <constructor-arg name="port" value="${redis.port6}"></constructor-arg>
            </bean>
         </set>
      </property>
   </bean>


   <!-- 配置JedisConnectionFactory -->
   <bean id="jeidsConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
      <constructor-arg name="clusterConfig" ref="redisClusterConfig" />
      <property name="poolConfig" ref="poolConfig"/>
      <property name="timeout" value="${redis.timeout}" />
      <!--<property name="password" value="123456"></property>-->
   </bean>


   <!-- 配置RedisTemplate -->
   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
      <property name="connectionFactory" ref="jeidsConnectionFactory" />
      <property name="keySerializer" >
         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
      </property>
      <property name="valueSerializer" >
         <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
      </property>
      <property name="hashKeySerializer">
         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
      </property>
      <property name="hashValueSerializer">
         <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
      </property>
   </bean>
</beans>